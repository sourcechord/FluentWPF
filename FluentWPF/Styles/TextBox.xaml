<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SourceChord.FluentWPF" >
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <!--<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>-->
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="{x:Static local:AccentColors.ImmersiveSystemAccent}"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="{x:Static local:AccentColors.ImmersiveSystemAccentLight1}"/>

    <Style x:Key="TextBoxRevealStyle" TargetType="{x:Type TextBox}">
        <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>-->
        <Setter Property="Background" Value="#88FFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Storyboard.TargetName="TextBlock_PlaceHolder"
                                             Storyboard.TargetProperty="Opacity"
                                             To=".2"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Storyboard.TargetName="TextBlock_PlaceHolder"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.2" />
                        </Storyboard>

                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation Storyboard.TargetName="TextBlock_PlaceHolder"
                                             Storyboard.TargetProperty="Opacity"
                                             From=".2"
                                             To="0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation Storyboard.TargetName="TextBlock_PlaceHolder"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </ControlTemplate.Resources>

                    
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock x:Name="Label_Header" Margin="2,0,0,5" Text="{TemplateBinding local:TextBoxHelper.HeaderText}" FontSize="{TemplateBinding local:TextBoxHelper.HeaderSize}" Foreground="{TemplateBinding local:TextBoxHelper.HeaderForegroundBrush}"/>


                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                Grid.Row="1">
                            <Grid>
                                <TextBlock Name="TextBlock_PlaceHolder" Text="{TemplateBinding local:TextBoxHelper.PlaceHolderText}" Foreground="{TemplateBinding local:TextBoxHelper.PlaceHolderForegroundBrush}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Grid>
                            
                        </Border>
                        <Border BorderBrush="{local:RevealBrush Color=White,Size = 100, Opacity=0.4}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Grid.Row="1">
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            <Setter Property="Background" Value="#BBFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            <Setter Property="Background" Value="#EEFFFFFF" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
                            </Trigger.ExitActions>
                        </Trigger>


                        <DataTrigger Binding="{Binding ElementName=Label_Header, Path=Text}" Value="">
                            <Setter TargetName="Label_Header" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>


                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text, Mode=OneWay}" Value="">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Background" Value="White" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PasswordBoxRevealStyle" TargetType="{x:Type PasswordBox}">
        <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>-->
        <Setter Property="Background" Value="#88FFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Storyboard.TargetName="TextBlock_PlaceHolder"
                                             Storyboard.TargetProperty="Opacity"
                                             To=".0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Storyboard.TargetName="TextBlock_PlaceHolder"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.2" />
                        </Storyboard>

                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation Storyboard.TargetName="TextBlock_PlaceHolder"
                                             Storyboard.TargetProperty="Opacity"
                                             From=".2"
                                             To="0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation Storyboard.TargetName="TextBlock_PlaceHolder"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </ControlTemplate.Resources>


                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock x:Name="Label_Header" Margin="2,0,0,5" Text="{TemplateBinding local:TextBoxHelper.HeaderText}" FontSize="{TemplateBinding local:TextBoxHelper.HeaderSize}" Foreground="{TemplateBinding local:TextBoxHelper.HeaderForegroundBrush}"/>


                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                Grid.Row="1">
                            <Grid>
                                <TextBlock Name="TextBlock_PlaceHolder" Text="{TemplateBinding local:TextBoxHelper.PlaceHolderText}" Foreground="{TemplateBinding local:TextBoxHelper.PlaceHolderForegroundBrush}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Grid>

                        </Border>
                        <Border BorderBrush="{local:RevealBrush Color=White,Size = 100, Opacity=0.4}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Grid.Row="1">
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            <Setter Property="Background" Value="#BBFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            <Setter Property="Background" Value="#EEFFFFFF" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
                            </Trigger.ExitActions>
                        </Trigger>


                        <DataTrigger Binding="{Binding ElementName=Label_Header, Path=Text}" Value="">
                            <Setter TargetName="Label_Header" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>


                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Password, Mode=OneWay}" Value="">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Background" Value="White" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>